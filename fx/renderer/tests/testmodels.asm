arch "arch/null.arch"

scope testscenes: {
	bunchacubes: {
		// dw 1; dw  $00,  $00,  $f0;
		// dw 3; dw -$30,  $00,  $a0;
		// dw 3; dw  $30,  $00,  $a0;
		// dw 3; dw  $40, $40, $40;
		dw 4; dw  $00, $00, $00;
		// dw 4; dw $300, $00, $48;
		// dw 2; dw  $00, -$40,  $f0;
		// dw 2; dw  $60, -$40,  $f0;
		// dw 2; dw -$60, -$40,  $f0;
		// dw 2; dw  $c0, -$40,  $f0;
		dw 0;
	}
}

scope testmodels: {
	dl nullmodel, colorcube, grassthing, diamond, place;

	nullmodel: {
		db 1; // 1 tristrip
		        dw $00'00, $00'00, $00'00;
		        dw $00'00, $10'00, $00'00;
		db $12; dw $10'00, $00'00, $00'00;
		db $ef; dw $10'00, $10'00, $00'00;
		db 0;
	}

	scope colorcube: {
		//     w x
		//     y z
		//  a b
		//  c d

		constant w($10);
		constant h($10);
		constant d($10);

		dw $01'00; // intrinsic scale

		db 8; // 8 verts
		db -w,  h, -d, $00, $00
		db  w,  h, -d, $20, $00
		db -w, -h, -d, $00, $20
		db  w, -h, -d, $20, $20

		db -w,  h, d, $30, $00
		db  w,  h, d, $20, $00
		db -w, -h, d, $30, $10
		db  w, -h, d, $20, $10

		db 3; // 3 tristrips
		// i think this is suboptimal for a cube but im dying of back faces
		db 0, 1;
		db $0d; db 2; dw $0c; dw +$00'00, +$00'00, -$01'00;
		db $0d; db 3; dw $0c; dw +$00'00, +$00'00, -$01'00;
		db $09; db 5; dw $04; dw +$01'00, +$00'00, +$00'00;
		db $09; db 7; dw $04; dw +$01'00, +$00'00, +$00'00;
		db $09; db 4; dw $07; dw +$00'00, +$00'00, +$01'00;
		db $09; db 6; dw $07; dw +$00'00, +$00'00, +$01'00;
		db $09; db 0; dw $09; dw -$01'00, +$00'00, +$00'00;
		db $09; db 2; dw $09; dw -$01'00, +$00'00, +$00'00;
		db $00;
		db 0, 4;
		db $09; db 1; dw $10; dw +$00'00, +$01'00, +$00'00;
		db $09; db 5; dw $10; dw +$00'00, +$01'00, +$00'00;
		db $00;
		db 3, 7;
		db $09; db 2; dw $0f; dw +$00'00, -$01'00, +$00'00;
		db $09; db 6; dw $0f; dw +$00'00, -$01'00, +$00'00;
		db $00;
	}

	scope grassthing: {
		constant g($04);
		dw $08'00;
		db (verts.end-verts)/5;
		scope verts: {
			db +(g*0), +(g*0), +(g*1),  $00,$20;
			db +(g*0), +(g*0), +(g*0),  $00,$20;
			db +(g*1), +(g*0), +(g*1),  $20,$20;
			db +(g*1), +(g*0), +(g*0),  $40,$20;
			db +(g*3), +(g*0), +(g*0),  $7f,$20;
			//
			db +(g*0), +(g*1), +(g*1),  $00,$00;
			db +(g*1), +(g*1), +(g*1),  $20,$00;
			db +(g*1), +(g*1), +(g*0),  $40,$00;
			db +(g*3), +(g*1), +(g*0),  $7f,$00;
			//
			db +(g*3), +(g*1), +(g*1),  $60,$00;
			// 10
			db +(g*0), +(g*1), +(g*3),  $00,$00;
			db +(g*0), +(g*1), +(g*1),  $00,$60;
			db +(g*3), +(g*1), +(g*3),  $60,$00;
			db +(g*3), +(g*1), +(g*1),  $60,$60;
			// 14
			db +(g*0), +(g*1), +(g*3),  $00,$60;
			db +(g*3), +(g*1), +(g*3),  $60,$60;
			db +(g*0), +(g*2), +(g*3),  $00,$41;
			db +(g*3), +(g*2), +(g*3),  $60,$41;
			db +(g*0), +(g*4), +(g*3),  $00,$00;
			db +(g*3), +(g*4), +(g*3),  $60,$00;
		end:
		}
		db 5; // 5 tristrips
		db 5, 0;
		db $0d; db 6; dw $13; dw +$00'00, +$00'00, -$01'00;
		db $0d; db 2; dw $13; dw +$00'00, +$00'00, -$01'00;
		db $0d; db 7; dw $13; dw -$01'00, +$00'00, +$00'00;
		db $0d; db 3; dw $13; dw -$01'00, +$00'00, +$00'00;
		db $0d; db 8; dw $13; dw +$00'00, +$00'00, -$01'00;
		db $0d; db 4; dw $13; dw +$00'00, +$00'00, -$01'00;
		db $00;
		db 0, 1;
		db $0d; db 2; dw $10; dw +$00'00, +$01'00, +$00'00;
		db $0d; db 3; dw $10; dw +$00'00, +$01'00, +$00'00;
		db $00;
		db 6, 7;
		db $0d; db 9; dw $10; dw +$00'00, +$01'00, +$00'00;
		db $0d; db 8; dw $10; dw +$00'00, +$01'00, +$00'00;
		db $00;
		db 10, 11;
		db $0d; db 12; dw $10; dw +$00'00, +$01'00, +$00'00;
		db $0d; db 13; dw $10; dw +$00'00, +$01'00, +$00'00;
		db $00;
		db 14, 15;
		db $0d; db 16; dw $13; dw +$00'00, +$00'00, -$01'00;
		db $0d; db 17; dw $13; dw +$00'00, +$00'00, -$01'00;
		db $0d; db 18; dw $12; dw +$00'00, +$00'00, -$01'00;
		db $0d; db 19; dw $12; dw +$00'00, +$00'00, -$01'00;
		db $00;
	}

	insert diamond, "diamond.kfm";
	insert place, "place.kfm";
}
